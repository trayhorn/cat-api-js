{"version":3,"file":"cat-search.js","sources":["../src/js/cat-search.js"],"sourcesContent":["import {\n  fetchBreeds,\n  fetchCatByBreed,\n  fetchBreedImages,\n  saveImageToFavorites,\n  getFavourites,\n  deleteFavourite\n} from \"./api\";\nimport { notifications } from '../utils/notifications';\nimport SlimSelect from \"slim-select\";\n\n\nconst select = document.querySelector('.breed-form .select');\nconst gallery = document.querySelector('.search-gallery');\nconst catInfo = document.querySelector('.cat-info');\nconst loader = document.querySelector('.loader');\n\nloader.classList.remove('is-hidden');\n\nfetchBreeds()\n  .then(({ data }) => renderSelectOptions(data))\n  .catch(e => notifications.error(e))\n  .finally(() => {\n    loader.classList.add('is-hidden');\n    select.classList.remove('is-hidden');\n  })\n\nselect.addEventListener('change', handleSelectChange);\n\nfunction renderSelectOptions(arr) {\n  const markup = arr\n    .map(\n      ({ id, name }) =>\n        `<option class=\"select-option\" value=\"${id}\">${name}</option>`\n    )\n    .join(\"\");\n\n  select.insertAdjacentHTML('beforeend', markup);\n\n  new SlimSelect({\n    select: \".breed-form .select\",\n  });\n}\n\nasync function handleSelectChange(e) {\n  catInfo.innerHTML = '';\n  gallery.innerHTML = '';\n  loader.classList.remove('is-hidden');\n  const breedId = e.target.value;\n\n  try {\n    const [catResponse, breedImagesResponse] = await Promise.all([\n      fetchCatByBreed(breedId),\n      fetchBreedImages(breedId),\n    ]);\n\n    const { data: [catData] } = catResponse;\n    catInfo.innerHTML = renderCatInfo(catData);\n\n    const { data: breedImages } = breedImagesResponse;\n    gallery.innerHTML = renderCatImages(breedImages);\n\n    gallery.addEventListener('click', handleFavIconClick)\n\n  } catch (error) {\n    notifications.error(e);\n  } finally {\n    loader.classList.add('is-hidden');\n  }\n}\n\nfunction renderCatInfo(object) {\n  const {\n    url,\n    breeds: [{ temperament, name, description }],\n  } = object;\n\n  return `\n        <div>\n          <img class=\"image\" src=\"${url}\" alt=\"${name}\">\n        </div>\n        <div>\n          <h2 class=\"name\">${name}</h2>\n          <p class=\"temper\">${temperament}</p>\n          <p class=\"description\">${description}</p>\n        </div>\n      `;\n}\n\nfunction renderCatImages(data) {\n  return data\n    .filter((el) => el.width > el.height)\n    .map(({ url, id }) => {\n      return `<li class=\"item\">\n            <div>\n              <img\n                class=\"image\"\n                src=\"${url}\" alt=\"\"\n              >\n              <img\n                data-image-id=\"${id}\"\n                class=\"icon\"\n                src=\"./img/heart.svg\" alt=\"heart-icon\"\n              >\n            </div>\n          </li>`;\n    })\n    .join(\"\");\n}\n\nasync function handleFavIconClick(e) {\n  if (!e.target.classList.contains('icon')) {\n    return;\n  }\n\n  const { imageId } = e.target.dataset;\n  e.target.setAttribute(\"src\", \"./img/heart-broken.svg\");\n\n  try {\n    const favorites = await getFavourites();\n\n    if (favorites.data.find((el) => el.image_id === imageId)) {\n      const elementToDelete = favorites.data.find(\n        (el) => el.image_id === imageId\n      );\n      e.target.setAttribute(\"src\", \"./img/heart.svg\");\n      await deleteFavourite(elementToDelete.id);\n      notifications.removedFromFavorites();\n      return;\n    }\n\n    await saveImageToFavorites(imageId);\n    notifications.addedToFavorites();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n\n\n\n\n\n\n\n"],"names":["select","gallery","catInfo","loader","fetchBreeds","data","renderSelectOptions","notifications","handleSelectChange","arr","markup","id","name","SlimSelect","breedId","catResponse","breedImagesResponse","fetchCatByBreed","fetchBreedImages","catData","renderCatInfo","breedImages","renderCatImages","handleFavIconClick","object","url","temperament","description","el","imageId","favorites","getFavourites","elementToDelete","deleteFavourite","saveImageToFavorites","error"],"mappings":"iJAYA,MAAMA,EAAS,SAAS,cAAc,qBAAqB,EACrDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAU,SAAS,cAAc,WAAW,EAC5CC,EAAS,SAAS,cAAc,SAAS,EAE/CA,EAAO,UAAU,OAAO,WAAW,EAEnCC,EAAa,EACV,KAAK,CAAC,CAAE,KAAAC,CAAM,IAAKC,EAAoBD,CAAI,CAAC,EAC5C,MAAM,GAAKE,EAAc,MAAM,CAAC,CAAC,EACjC,QAAQ,IAAM,CACbJ,EAAO,UAAU,IAAI,WAAW,EAChCH,EAAO,UAAU,OAAO,WAAW,CACvC,CAAG,EAEHA,EAAO,iBAAiB,SAAUQ,CAAkB,EAEpD,SAASF,EAAoBG,EAAK,CAChC,MAAMC,EAASD,EACZ,IACC,CAAC,CAAE,GAAAE,EAAI,KAAAC,CAAM,IACX,wCAAwCD,CAAE,KAAKC,CAAI,WACtD,EACA,KAAK,EAAE,EAEVZ,EAAO,mBAAmB,YAAaU,CAAM,EAE7C,IAAIG,EAAW,CACb,OAAQ,qBACZ,CAAG,CACH,CAEA,eAAeL,EAAmB,EAAG,CACnCN,EAAQ,UAAY,GACpBD,EAAQ,UAAY,GACpBE,EAAO,UAAU,OAAO,WAAW,EACnC,MAAMW,EAAU,EAAE,OAAO,MAEzB,GAAI,CACF,KAAM,CAACC,EAAaC,CAAmB,EAAI,MAAM,QAAQ,IAAI,CAC3DC,EAAgBH,CAAO,EACvBI,EAAiBJ,CAAO,CAC9B,CAAK,EAEK,CAAE,KAAM,CAACK,CAAO,CAAC,EAAKJ,EAC5Bb,EAAQ,UAAYkB,EAAcD,CAAO,EAEzC,KAAM,CAAE,KAAME,CAAa,EAAGL,EAC9Bf,EAAQ,UAAYqB,EAAgBD,CAAW,EAE/CpB,EAAQ,iBAAiB,QAASsB,CAAkB,CAErD,MAAe,CACdhB,EAAc,MAAM,CAAC,CACzB,QAAY,CACRJ,EAAO,UAAU,IAAI,WAAW,CACjC,CACH,CAEA,SAASiB,EAAcI,EAAQ,CAC7B,KAAM,CACJ,IAAAC,EACA,OAAQ,CAAC,CAAE,YAAAC,EAAa,KAAAd,EAAM,YAAAe,CAAW,CAAE,CAC5C,EAAGH,EAEJ,MAAO;AAAA;AAAA,oCAE2BC,CAAG,UAAUb,CAAI;AAAA;AAAA;AAAA,6BAGxBA,CAAI;AAAA,8BACHc,CAAW;AAAA,mCACNC,CAAW;AAAA;AAAA,OAG9C,CAEA,SAASL,EAAgBjB,EAAM,CAC7B,OAAOA,EACJ,OAAQuB,GAAOA,EAAG,MAAQA,EAAG,MAAM,EACnC,IAAI,CAAC,CAAE,IAAAH,EAAK,GAAAd,KACJ;AAAA;AAAA;AAAA;AAAA,uBAIUc,CAAG;AAAA;AAAA;AAAA,iCAGOd,CAAE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAM9B,EACA,KAAK,EAAE,CACZ,CAEA,eAAeY,EAAmB,EAAG,CACnC,GAAI,CAAC,EAAE,OAAO,UAAU,SAAS,MAAM,EACrC,OAGF,KAAM,CAAE,QAAAM,CAAS,EAAG,EAAE,OAAO,QAC7B,EAAE,OAAO,aAAa,MAAO,wBAAwB,EAErD,GAAI,CACF,MAAMC,EAAY,MAAMC,IAExB,GAAID,EAAU,KAAK,KAAMF,GAAOA,EAAG,WAAaC,CAAO,EAAG,CACxD,MAAMG,EAAkBF,EAAU,KAAK,KACpCF,GAAOA,EAAG,WAAaC,CAChC,EACM,EAAE,OAAO,aAAa,MAAO,iBAAiB,EAC9C,MAAMI,EAAgBD,EAAgB,EAAE,EACxCzB,EAAc,qBAAoB,EAClC,MACD,CAED,MAAM2B,EAAqBL,CAAO,EAClCtB,EAAc,iBAAgB,CAC/B,OAAQ4B,EAAO,CACd,QAAQ,IAAIA,CAAK,CAClB,CACH"}